

#packaged function
from string_grouper import match_strings
def matchlargedataset(input1,input2,merge1,merge2):
    input1['index'] = input1.index
    input2['index'] = input2.index
    input1[merge1] = input1[merge1].astype(str)
    input2[merge2] = input2[merge2].astype(str)
    duplicates = pd.Series(input1[merge1])
    tryjoin = match_strings(input2[merge2],duplicates,max_n_matches=1,min_similarity=0.8)
    tryjoin = tryjoin.merge(input2, left_on='left_index', right_on='index')
    tryjoin =tryjoin.merge(input1, left_on = 'right_index', right_on = 'index')
    return(tryjoin)

matched = matchlargedataset(nvidianventure, assignee,'Name','newname' )

#input is a dataframe
#merge is the column names to merge on






import pandas as pd
import numpy as np
import time
from string_grouper import match_strings
import os
from json import loads
import pandas as pd
from fuzzywuzzy import fuzz
import numpy as np
from datetime import date
import math
from datetime import timedelta
from dateutil.relativedelta import relativedelta, MO
import json
import concurrent.futures
os.chdir('/Users/jjw6286/Downloads/CSR_Markasinsurance/Match_subsidaries/')


result = joinwithCUSIP.to_json(orient="records")
parsed = json.loads(result)
with open(f'Submatch_CUSIP.json', 'w') as outfile:
	json.dump(parsed, outfile)


